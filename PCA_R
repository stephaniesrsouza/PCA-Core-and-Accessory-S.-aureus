library(dplyr)
library(stringr)
library(tidymodels)
library(recipes)
library(ggplot2)
library(RColorBrewer)

path = "/Users/sd557866/OneDrive - University at Albany - SUNY/PROJECT_SaureusAccessoryGenome/NEW_Human_Vet/PCA"
setwd(path)

data_core = read.csv("Core_Genome_All.csv")  #For Accessory genome, change this file for Accessory_Genome_All.csv
host = read.csv("Saureus_host.csv")  #For evaluate by ST instead of host, change this file for Saureus_host.csv

#Formatting the data
binary_data <- data_core[,15:451]
binary_data[binary_data == ""] <- NA
binary_data[!is.na(binary_data)] <- "1"
binary_data[is.na(binary_data)] <- "0"
binary_data_t = as.data.frame(t(binary_data))
names(binary_data_t) <- data_core$Gene
binary_data_t_convert_numeric <- as.data.frame(apply(binary_data_t, 2, as.numeric))
binary_data_t_convert_numeric["host"] <- host$Host
binary_data_t_convert_numeric$host <- str_replace_all(binary_data_t_convert_numeric$host, pattern=" ", repl="")

#PCA analysis
pca_rec = recipe(~., data = binary_data_t_convert_numeric) %>% update_role(host, new_role="id") %>% step_pca(all_predictors())
pca_prep = prep(pca_rec)
pca_prep
juice(pca_prep) %>% ggplot(aes(PC1, PC2, label = host)) + geom_point(aes(color = host), alpha = 0.7, size = 3) + labs(color = NULL) + scale_color_manual(values = c("#8bbea9", "#8e8cbf")) + theme_linedraw()
pca_prep$template

#Saving the results
write.csv(pca_prep$template, "Core_Host.csv")
